# This config file uses nginx fastcgi-cache
fastcgi_cache_path /var/www/cache/rocketstack levels=1:2 keys_zone=rocketstack:100m inactive=60m;

server {
	listen 80;
	listen [::]:80;
	server_name _;

    root /var/www/rocketstack;

    index index.php index.htm index.html;

    access_log /var/log/nginx/rocketstack_access.log;
    error_log /var/log/nginx/rocketstack_error.log;

    include snippets/acme-challenge.conf;

    # Exclusions
    include snippets/exclusions.conf;
    
    #gzip
    include snippets/gzip.conf;

    # Security
    include snippets/security.conf;

    # Static Content
    include snippets/static-files.conf;

    # Fastcgi cache rules
    include snippets/fastcgi-cache.conf;

    include snippets/limits.conf;

    include snippets/nginx-cloudflare.conf;

    location / {
    		try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
		try_files $uri =404;
		include snippets/fastcgi-params.conf;

		fastcgi_pass unix:/run/php/php7.3-fpm.sock;

		# Skip cache based on rules in snippets/fastcgi-cache.conf.
		fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;

		# Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
		fastcgi_cache rocketstack;

		# Define caching time.
		fastcgi_cache_valid 60m;
		#increase timeouts
		fastcgi_read_timeout 6000;
		fastcgi_connect_timeout 6000;
		fastcgi_send_timeout 6000;
		proxy_read_timeout 6000;
		proxy_connect_timeout 6000;
		proxy_send_timeout 6000;
		send_timeout 6000;

		#these lines should be the ones to allow Cloudflare Flexible SSL to be used so the server does not need to decrypt SSL
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;

    }

}

server {
    listen              443 ssl default_server;
    listen              [::]:443 ssl default_server ;
	server_name _;

    root /var/www/rocketstack;

    index index.php index.htm index.html;

    access_log /var/log/nginx/rocketstack_ssl_access.log;
    error_log /var/log/nginx/rocketstack_ssl_error.log;

    #once you have SSL certificates using LetsEncrypt you can alter the paths in the two lines below to reflect your domain and uncomment the lines by removing the leading # symbol
    #ssl_certificate           /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    #ssl_certificate_key       /etc/letsencrypt/live/yourdomain.com/privkey.pem;

    # Exclusions
    include snippets/exclusions.conf;
    
    #gzip
    include snippets/gzip.conf;

    # Security
    include snippets/security.conf;

    # Static Content
    include snippets/static-files.conf;

    # Fastcgi cache rules
    include snippets/fastcgi-cache.conf;

    include snippets/limits.conf;

    include snippets/nginx-cloudflare.conf;

    location / {
    		try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
		try_files $uri =404;
		include snippets/fastcgi-params.conf;

		fastcgi_pass unix:/run/php/php7.3-fpm.sock;

		# Skip cache based on rules in snippets/fastcgi-cache.conf.
		fastcgi_cache_bypass $skip_cache;
		fastcgi_no_cache $skip_cache;

		# Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
		fastcgi_cache rocketstack;

		# Define caching time.
		fastcgi_cache_valid 60m;
		#increase timeouts
		fastcgi_read_timeout 6000;
		fastcgi_connect_timeout 6000;
		fastcgi_send_timeout 6000;
		proxy_read_timeout 6000;
		proxy_connect_timeout 6000;
		proxy_send_timeout 6000;
		send_timeout 6000;

		#these lines should be the ones to allow Cloudflare Flexible SSL to be used so the server does not need to decrypt SSL if you wish
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;

    }

}

